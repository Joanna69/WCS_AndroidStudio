package com.example.tabtest;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.AxisValue;
import lecho.lib.hellocharts.model.Line;
import lecho.lib.hellocharts.model.LineChartData;
import lecho.lib.hellocharts.model.PointValue;
import lecho.lib.hellocharts.model.Viewport;
import lecho.lib.hellocharts.view.LineChartView;

import java.util.Calendar;


public class Graph2 extends Fragment  {

    LineChartView lineChartView;

    ArrayList<Integer> yAxisData = new ArrayList<>();
    List yAxisValues = new ArrayList();
    List<AxisValue> axisValues = new ArrayList<>();

    List<Line> lines = new ArrayList<Line>();

    List<AxisValue> xLabels = new ArrayList<AxisValue>();

    public int minuteOfMeas;
    public int hourOfMeas;


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState)  {
        View rootView = inflater.inflate(R.layout.graph2, container, false);

        lineChartView = rootView.findViewById(R.id.chart);


        Date currentTime = Calendar.getInstance().getTime();
        hourOfMeas = currentTime.getHours();
        minuteOfMeas = currentTime.getMinutes();

        readAndGraphData(hourOfMeas, minuteOfMeas);

        return rootView;
    }



    void readAndGraphData(int currentHour, int currentMinute) {
        //------------------------------- read data from file --------------------------------------
        try {
            yAxisData = VMUtil.readUviDataFromFile("data.txt", getContext());
        } catch (IOException e) {
            e.printStackTrace();
        }

        // needed for graph
        Line line = new Line(yAxisValues).setColor(Color.parseColor("#9874a7"));

        // --------------------------------------- making time axis nice ---------------------------


        int n = yAxisData.size();
        int minutesMeasured = n/2;
        int startMinute = currentMinute;
        int startHour = currentHour;
        for (int i = 0; i < minutesMeasured; i++) {
            startMinute--;
            if (startMinute == 0) {
                startMinute = 59;
                startHour--;
            }
        }

        int m = startMinute;
        int h = startHour;
        int rate = 30;                  // rate in seconds: how often is data recorded. Here 30s.

        for (int i = 0; i < n; i++) {
            if (m < 10) {
                xLabels.add(i, new AxisValue(i).setLabel(String.valueOf(h)+ ":0" + String.valueOf(m)));
            } else {
                xLabels.add(i, new AxisValue(i).setLabel(String.valueOf(h) + ":" + String.valueOf(m)));
            }
            if (i % (60/rate) == 0) {           // change label every 60/rate rounds
                m++;
                if (m == 60) {
                    m = 0;
                    h++;
                }
            }
        }
        // -----------------------------------------------------------------------------------------

        for (int i = 0; i < yAxisData.size(); i++) {
            yAxisValues.add(new PointValue(i, yAxisData.get(i)));
            axisValues.add(i, new AxisValue(i).setLabel(String.valueOf(i)));
        }

        lines.add(line);

        LineChartData data = new LineChartData();
        data.setLines(lines);

        Axis axis = new Axis();
        axis.setAutoGenerated(false);
        axis.setValues(xLabels);
        axis.setName("Time");

        axis.setTextSize(16);
        axis.setTextColor(Color.parseColor("#03A9F4"));
        axis.setHasTiltedLabels(true);
        data.setAxisXBottom(axis);

        Axis yAxis = new Axis();
        yAxis.setName("UV index");
        yAxis.setTextColor(Color.parseColor("#03A9F4"));
        yAxis.setTextSize(16);
        data.setAxisYLeft(yAxis);


        lineChartView.setLineChartData(data);
        Viewport viewport = new Viewport(lineChartView.getMaximumViewport());
        viewport.top = 9;
        viewport.bottom = 0;
        lineChartView.setMaximumViewport(viewport);
        lineChartView.setCurrentViewport(viewport);

    }





    @Override
    public void onResume() {
        super.onResume();

        readAndGraphData(hourOfMeas, minuteOfMeas);
    }

}